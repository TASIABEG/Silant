# Generated by Django 5.2.5 on 2025-08-10 12:35

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='DriveAxleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='EngineModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('contact_person', models.CharField(max_length=255)),
                ('contact_phone', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='MachineModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='SteeringAxleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='TransmissionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('guest', 'Гость'), ('client', 'Клиент'), ('service', 'Сервисная организация'), ('manager', 'Менеджер ЧЗСА')], default='guest', max_length=20)),
                ('company', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=50, unique=True, verbose_name='Зав. № машины')),
                ('engine_serial', models.CharField(max_length=50, verbose_name='Зав. № двигателя')),
                ('transmission_serial', models.CharField(max_length=50, verbose_name='Зав. № трансмиссии')),
                ('drive_axle_serial', models.CharField(max_length=50, verbose_name='Зав. № ведущего моста')),
                ('steering_axle_serial', models.CharField(max_length=50, verbose_name='Зав. № управляемого моста')),
                ('supply_contract', models.CharField(max_length=255, verbose_name='Договор поставки №, дата')),
                ('shipment_date', models.DateField(verbose_name='Дата отгрузки с завода')),
                ('consignee', models.CharField(max_length=255, verbose_name='Грузополучатель')),
                ('delivery_address', models.TextField(verbose_name='Адрес поставки (эксплуатации)')),
                ('equipment', models.TextField(verbose_name='Комплектация (доп. опции)')),
                ('current_hours', models.PositiveIntegerField(default=0, verbose_name='Наработка, м/час')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(limit_choices_to={'role': 'client'}, on_delete=django.db.models.deletion.PROTECT, related_name='owned_machines', to=settings.AUTH_USER_MODEL, verbose_name='Клиент')),
                ('drive_axle_model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='monitoring.driveaxlemodel', verbose_name='Модель ведущего моста')),
                ('engine_model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='monitoring.enginemodel', verbose_name='Модель двигателя')),
                ('service_company', models.ForeignKey(blank=True, limit_choices_to={'role': 'service'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='serviced_machines', to=settings.AUTH_USER_MODEL, verbose_name='Сервисная компания')),
                ('machine_model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='monitoring.machinemodel', verbose_name='Модель техники')),
                ('steering_axle_model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='monitoring.steeringaxlemodel', verbose_name='Модель управляемого моста')),
                ('transmission_model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='monitoring.transmissionmodel', verbose_name='Модель трансмиссии')),
            ],
        ),
        migrations.CreateModel(
            name='Component',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('part_number', models.CharField(max_length=50)),
                ('lifetime_hours', models.PositiveIntegerField()),
                ('install_date', models.DateField()),
                ('current_hours', models.PositiveIntegerField(default=0)),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='components', to='monitoring.machine')),
            ],
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('service', 'Техническое обслуживание'), ('repair', 'Ремонт'), ('failure', 'Поломка')], max_length=20)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField()),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_history', to='monitoring.machine')),
                ('replaced_components', models.ManyToManyField(blank=True, to='monitoring.component')),
                ('service_company', models.ForeignKey(limit_choices_to={'role': 'service'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
